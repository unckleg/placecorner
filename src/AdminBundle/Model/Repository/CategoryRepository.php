<?php

namespace AdminBundle\Model\Repository;

use AdminBundle\Model\Entity\Category;
use App\CoreBundle\Model\Constants;
use Doctrine\ORM\EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{
    private static $modifyFields = [
        'hide'   => 'status',
        'show'   => 'status',
        'delete' => 'isDeleted'
    ];

    /**
     * @param  integer $id
     * @param  string $status
     * @return mixed
     */
    public function modifyCategory($id, $status)
    {
        $id     = (int) $id;
        $status = (string) $status;
        $field  = self::$modifyFields[$status];

        return $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->update(Category::class, 'p')
            ->set('p.' . $field, '1-p.'.$field)
            ->where('p.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->execute()
        ;
    }

    /**
     * @param  string $locale
     * @return array
     */
    public function findAllParentsByLocale($locale = null)
    {
        $locale = !empty($locale) ?
            $locale :
            self::DEFAULT_LOCALE;

        return $this
            ->createQueryBuilder('c')
            ->select('c, t')
            ->leftJoin('c.translations', 't')
            ->where('t.locale = :locale')
            ->andWhere('c.isDeleted = :deleted')
            ->andWhere('c.parentId  = :isParent')
            ->setParameter('deleted', Constants::IS_ACTIVE)
            ->setParameter('locale', $locale)
            ->setParameter('isParent', 0)
            ->getQuery()
            ->getResult()
        ;
    }
}
